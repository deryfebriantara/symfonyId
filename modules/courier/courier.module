<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\courier\Entity\TemplateCollection;
use Drupal\courier\ChannelInterface;

/**
 * Implements hook_entity_predelete().
 */
function courier_entity_predelete(EntityInterface $entity) {
  // Remove references from TemplateCollection when a Channel entity is deleted.
  if ($entity instanceof ChannelInterface) {
    /** ChannelInterface */
    if ($collection = TemplateCollection::getTemplateCollectionForTemplate($entity)) {
      $collection
        ->removeTemplate($entity->getEntityTypeId())
        ->save();
    }
  }

  // Remove template collections if owner entity is deleted.
  $template_collection_storage = \Drupal::entityManager()
    ->getStorage('courier_template_collection');
  $query = $template_collection_storage->getQuery();
  $group = $query->andConditionGroup()
    ->condition('owner__target_type', $entity->getEntityTypeId(), '=')
    ->condition('owner__target_id', $entity->id(), '=');
  $query->condition($group);
  if ($ids = $query->execute()) {
    $template_collection_storage->delete($template_collection_storage->loadMultiple($ids));
  }
}